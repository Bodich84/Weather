[{"D:\\IT\\react\\weather\\src\\index.js":"1","D:\\IT\\react\\weather\\src\\App.js":"2","D:\\IT\\react\\weather\\src\\components\\Alert.js":"3","D:\\IT\\react\\weather\\src\\components\\Form.js":"4","D:\\IT\\react\\weather\\src\\components\\Weather.js":"5","D:\\IT\\react\\weather\\src\\components\\Loading.js":"6"},{"size":151,"mtime":1611774975910,"results":"7","hashOfConfig":"8"},{"size":2625,"mtime":1612254625741,"results":"9","hashOfConfig":"8"},{"size":257,"mtime":1612251766224,"results":"10","hashOfConfig":"8"},{"size":479,"mtime":1612249962671,"results":"11","hashOfConfig":"8"},{"size":495,"mtime":1612252055874,"results":"12","hashOfConfig":"8"},{"size":293,"mtime":1612251911685,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"lwhbxo",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"D:\\IT\\react\\weather\\src\\index.js",[],["29","30"],"D:\\IT\\react\\weather\\src\\App.js",["31"],"import { useState, useEffect } from 'react'\nimport Weather from './components/Weather'\nimport Form from './components/Form'\nimport Alert from './components/Alert'\nimport Loading from './components/Loading'\n\nfunction App() {\n  const [loading, getLoading] = useState(true)\n  const [error, getError] = useState(false)\n  const [newCity, getNewCity] = useState('')\n  const [weather, setWeather] = useState({\n    city: undefined,\n    country: undefined,\n    description: undefined,\n    humidity: undefined,\n    temp: undefined,\n    icon: undefined,\n    cod: undefined\n  })\n\n  const iconLink = `http://openweathermap.org/img/w/${weather.icon}.png`\n  const imgWeather = <img src={iconLink} alt=\"\" />\n\n  const inputCity = (event) => {\n    getNewCity(event.target.value)\n  }\n\n  const changeCity = (event) => {\n    event.preventDefault();\n    if (newCity) {\n      getWeather(newCity)\n    }\n  }\n\n  const getWeather = async (weatherInCity) => {\n    const API_KEY = '6462b9b55c9629dc6a4894a45ea23f96'\n    const url = `http://api.openweathermap.org/data/2.5/weather?q=${weatherInCity}&lang=ua&units=metric&appid=${API_KEY}`\n    const api_url = await fetch(url)\n    const data = await api_url.json()\n    try {\n      setWeather({\n        city: data.name,\n        country: data.sys.country,\n        description: data.weather[0].description,\n        humidity: data.main.humidity,\n        temp: data.main.temp,\n        icon: data.weather[0].icon,\n        cod: data.cod,\n      })\n      getError(false)\n    }\n    catch {\n      getError(true)\n      setWeather({ ...weather, cod: data.cod })\n    }\n  }\n\n  useEffect(() => {\n    const getUserCity = async () => {\n      await fetch('https://ipapi.co/json/')\n        .then(response => response.json())\n        .then(json => {\n          getWeather(json.city)\n        });\n      getLoading(false)\n    }\n    getUserCity()\n  }, [])\n\n  useEffect(() => {\n    if (weather.cod === 200) {\n      getNewCity('')\n    }\n  }, [weather])\n\n  return (\n    <div className=\"container\">\n      <div className=\"row justify-content-md-center\">\n        <div className=\"col-md-auto p-3 mt-5 border bg-light text-center\">\n\n          <Loading loading={loading} />\n\n          <Weather\n            weather={weather}\n            imgWeather={imgWeather}\n          />\n\n          <Alert error={error}\n            message=\"Сталася помилка, перевірте правильність введених даних\"\n          />\n\n\n          <Form\n            newCity={newCity}\n            changeCity={changeCity}\n            inputCity={inputCity}\n          />\n\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","D:\\IT\\react\\weather\\src\\components\\Alert.js",[],"D:\\IT\\react\\weather\\src\\components\\Form.js",[],"D:\\IT\\react\\weather\\src\\components\\Weather.js",[],"D:\\IT\\react\\weather\\src\\components\\Loading.js",[],["32","33"],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":68,"column":6,"nodeType":"40","endLine":68,"endColumn":8,"suggestions":"41"},{"ruleId":"34","replacedBy":"42"},{"ruleId":"36","replacedBy":"43"},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getWeather'. Either include it or remove the dependency array.","ArrayExpression",["46"],["44"],["45"],"no-global-assign","no-unsafe-negation",{"desc":"47","fix":"48"},"Update the dependencies array to be: [getWeather]",{"range":"49","text":"50"},[1845,1847],"[getWeather]"]